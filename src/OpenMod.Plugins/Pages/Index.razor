@page "/"

@inject IPluginRepository PluginRepository

@if (_plugins == null)
{
    <MudText Typo="Typo.body1">Loading</MudText>
}
else
{
    // todo: use SmartFormat.NET for this
    string _pluginsCountHeader = _plugins.Count == 1
        ? $"There are {_plugins.Count} plugin"
        : $"There are {_plugins.Count} plugins";

    <MudText Typo="Typo.h4">@_pluginsCountHeader</MudText>

    <br>
    <br>

    <MudGrid>
        @foreach (var plugin in _plugins)
        {
            <PluginCard Data="@plugin"/>
        }
    </MudGrid>
}

@code {

    private IReadOnlyList<OpenMod.Plugins.Data.Plugin>? _plugins;

    protected override async Task OnInitializedAsync()
    {
        _plugins = await PluginRepository.SearchAsync(query: "", skip: 0, take: 20, includePrerelease: true);
    }

}
