@page "/"

@inject IPluginRepository PluginRepository

@if (_pluginsResponce == null)
{
    <MudText Typo="Typo.body1">Loading</MudText>
}
else
{
    <MudText Typo="Typo.h4">
        @Smart.Format("There {0:plural:is 1 plugin|are {} plugins}", _pluginsResponce.Total)
    </MudText>

    <br>
    <br>

    <MudGrid>
        @foreach (var plugin in _pluginsResponce.Plugins)
        {
            <PluginCard Data="@plugin"/>
        }
    </MudGrid>
}

@code {

    private PluginsResponse? _pluginsResponce;

    protected override async Task OnInitializedAsync()
    {
        _pluginsResponce = await PluginRepository.SearchAsync(query: "", skip: 0, take: 20, includePrerelease: true);
    }

}
