@using Microsoft.Extensions.Logging

@inject ILogger<PluginCard> Logger
@inject ISnackbar Snackbar
@inject IJSRuntime JsRuntime

<MudItem xs="12" md="12">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">
                    @Data.Title
                    @if (Data.IsOfficial)
                    {
                        <MudTooltip Text="This plugin is created by OpenMod" Placement="Placement.Top">
                            <MudIcon Icon="@Icons.Material.Filled.CheckCircle"
                                     Color="Color.Info"
                                     Size="Size.Small"
                                     Style="margin-left: 10px;"/>
                        </MudTooltip>
                    }
                    <MudText Typo="Typo.subtitle1" Style="display: inline; margin-left: 10px;">
                        by: @Smart.Format("{0:list:{}|, | and }", new object[] {Data.Authors})
                    </MudText>
                </MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <div style="display: inline-flex;">
                    <MudTooltip Text="Copy install command" Placement="Placement.Top">
                        <MudIconButton Icon="@Icons.Material.Filled.ContentCopy" @onclick="@CopyToClipboardAsync"/>
                    </MudTooltip>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert" Direction="Direction.Bottom" OffsetY="true">
                        <MudText Typo="Typo.body2" Class="px-4 py-2">
                            <b>Sites</b>
                        </MudText>
                        @{
                            bool siteDisabled = Data.SiteUrl == null;
                        }
                        <MudMenuItem Link="@Data.SiteUrl" Target="_blank" Disabled="@siteDisabled">Plugin site</MudMenuItem>
                        <MudMenuItem Link="@Data.NuGetUrl" Target="_blank">NuGet page</MudMenuItem>
                    </MudMenu>
                </div>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body1">@Data.Description</MudText>
        </MudCardContent>
    </MudCard>
</MudItem>

@code {

    [Parameter]
    public OpenMod.Plugins.Models.Plugin Data { get; set; } = null!;

    // todo: refactor to a separate component?
    private async Task CopyToClipboardAsync()
    {
    // Writing to the clipboard may be denied, so we must handle the exception
        try
        {
            await JsRuntime.InvokeVoidAsync("navigator.clipboard.writeText", Data.CommandInstall);
            Snackbar.Add("Command copied!", Severity.Success);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to copy to clipboard");
            Snackbar.Add("Failed to copy!", Severity.Error);
        }
    }

}
