@implements IDisposable

@inject INavigator Navigator
@inject NavigationManager NavigationManager
@inject IQueryParser QueryParser

<div>
    <MudAppBar Fixed="false">
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudText Typo="Typo.h5" @onclick="@Navigator.Index" Class="brand-text">OpenMod Plugins</MudText>
        </MudHidden>
        <MudAppBarSpacer/>
        <MudItem xs="12" sm="6" md="4">
            <MudTextField @bind-Value="@SearchQuery"
                           Placeholder="Search"
                           Variant="Variant.Outlined"
                           Adornment="Adornment.End"
                           AdornmentIcon="@Icons.Filled.Search"
                           OnAdornmentClick="@(() => Navigator.Search(page: 0, query: SearchQuery))"
                           OnKeyDown="@SearchFieldKeyDownEventHandler"
                           Immediate="true"
                           DisableUnderLine="true"
                           Class="search-bar"/>
        </MudItem>
        <MudAppBarSpacer/>
        <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
            <MudButton Link="https://github.com/openmod/openmod" Target="_blank" Color="Color.Inherit">Get OpenMod</MudButton>
            <MudDivider Vertical="true" FlexItem="true" DividerType="DividerType.Middle" Class="mx-4 my-5"/>
            <MudTooltip Text="Toggle light/dark theme" Placement="Placement.Start">
                <MudIconButton OnClick="@OnThemeRotateRequest" Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit"/>
            </MudTooltip>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="false">
            <MudMenu Icon="@Icons.Filled.KeyboardArrowDown" Direction="Direction.Right" OffsetY="true" Color="Color.Inherit">
                <MudMenuItem Link="https://github.com/openmod/openmod" Target="_blank">Get OpenMod</MudMenuItem>
                <MudMenuItem OnClick="@OnThemeRotateRequest">Toggle light/dark theme</MudMenuItem>
            </MudMenu>
        </MudHidden>
    </MudAppBar>
</div>

@code {

    [Parameter]
    public EventCallback OnThemeRotateRequest { get; set; }

    public string SearchQuery { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        SetSearchQueryFromUriToTextBox();
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        SetSearchQueryFromUriToTextBox();
    }

    private void SetSearchQueryFromUriToTextBox()
    {
        QueryParser.Search(null, out _, out string query);
        SearchQuery = query;
    }

    private void SearchFieldKeyDownEventHandler(KeyboardEventArgs args)
    {
        if (args.Key.Equals("enter", StringComparison.OrdinalIgnoreCase))
        {
            Navigator.Search(page: 0, query: SearchQuery);
        }
    }

}
